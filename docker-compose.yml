version: '3.9'

services:

  prestart:
    build:
      context: ./backend
    image: ${DOCKER_IMAGE_BACKEND}
    env_file:
      - .env
    command: bash scripts/prestart.sh
    depends_on:
      - db

  backend:
    build:
      context: ./backend
    image: ${DOCKER_IMAGE_BACKEND}
    ports:
      - "8000:8000"
    networks:
      - traefik-public
      - default
    volumes:
      - ./backend/exports:/app/exports
    env_file: .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public

      - traefik.http.services.${STACK_NAME?Variable not set}-backend.loadbalancer.server.port=8000

      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.rule=Host(`api.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.entrypoints=http

      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-https.rule=Host(`api.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-https.entrypoints=https
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-https.tls=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-https.tls.certresolver=le

      # Enable redirection for HTTP and HTTPS
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.middlewares=https-redirect
    depends_on:
      - db
      - prestart

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data

  
  adminer:
    image: adminer
    restart: always
    networks:
      - traefik-public
      - default
    depends_on:
      - db
    environment:
      - ADMINER_DESIGN=pepa-linha-dark
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      - traefik.http.routers.${STACK_NAME?Variable not set}-adminer-http.rule=Host(`adminer.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-adminer-http.entrypoints=http
      - traefik.http.routers.${STACK_NAME?Variable not set}-adminer-http.middlewares=https-redirect
      - traefik.http.routers.${STACK_NAME?Variable not set}-adminer-https.rule=Host(`adminer.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-adminer-https.entrypoints=https
      - traefik.http.routers.${STACK_NAME?Variable not set}-adminer-https.tls=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-adminer-https.tls.certresolver=le
      - traefik.http.services.${STACK_NAME?Variable not set}-adminer.loadbalancer.server.port=8080

  frontend:
    build:
      context: ./frontend
    image: ${DOCKER_IMAGE_FRONTEND}
    ports:
      - "3000:3000"
    networks:
        - traefik-public
        - default
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.${DOMAIN}
    env_file: .env
    labels:
    - traefik.enable=true
    - traefik.docker.network=traefik-public
    - traefik.constraint-label=traefik-public

    # Fixed port to match Next.js app
    - traefik.http.services.${STACK_NAME?Variable not set}-frontend.loadbalancer.server.port=3000

    - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.rule=Host(`dashboard.${DOMAIN?Variable not set}`)
    - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.entrypoints=http

    - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.rule=Host(`dashboard.${DOMAIN?Variable not set}`)
    - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.entrypoints=https
    - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.tls=true
    - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.tls.certresolver=le

    # Enable redirection for HTTP and HTTPS
    - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.middlewares=https-redirect
    depends_on:
      - backend

volumes:
  pgdata:

networks:
  traefik-public:
    # Allow setting it to false for testing
    # external: true